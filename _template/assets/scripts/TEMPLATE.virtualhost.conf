server {
    location /elb-status {
       access_log off;
       return 200;
       add_header Content-Type text/plain;
    }
    listen          80;
    server_name     VIRTUALHOST www.VIRTUALHOST;
    return 301 https://$host$request_uri;
}

upstream backend {
    ip_hash;
    server WEB_BACKEND1_IP;
    server WEB_BACKEND2_IP;
}


server {
    listen          443 ssl;
    server_name     VIRTUALHOST www.VIRTUALHOST;
    allow           all;

    resolver 8.8.8.8 8.8.4.4 208.67.222.222 ipv6=off valid=300s;
    resolver_timeout 20s;


    ssl_certificate     /etc/nginx/ssl/VIRTUALHOST.crt;
    ssl_certificate_key /etc/nginx/ssl/VIRTUALHOST.key;

    ssl_session_timeout         5m;
    ssl_session_cache           shared:SSL:10m;
    ssl_protocols               TLSv1.1 TLSv1.2;
    ssl_ciphers                 kEECDH+AES128:kEECDH:kEDH:-3DES:kRSA+AES128:kEDH+3DES:DES-CBC3-SHA:!RC4:!aNULL:!eNULL:!MD5:!EXPORT:!LOW:!SEED:!CAMELLIA:!IDEA:!PSK:!SRP:!SSLv2:!DES:!3DES;
    ssl_prefer_server_ciphers   on;

    client_max_body_size 100m;

    location /elb-status {
        access_log off;
        return 200;
        add_header Content-Type text/plain;
    }

    set $backend 'backend';

    location / {
        proxy_pass          https://$backend;

        proxy_next_upstream     error timeout invalid_header http_500 http_504;
        proxy_connect_timeout   10;
        proxy_send_timeout  300s;
        proxy_read_timeout  300s;

        proxy_http_version 1.1;

        proxy_redirect off;

        proxy_set_header    Upgrade         $http_upgrade;
        proxy_set_header    Connection      "upgrade";

        proxy_set_header    Host                $http_host;
        #proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Real-IP           $http_x_forwarded_for;
        #proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-For     $http_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
    }
}
